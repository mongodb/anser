#######################################
#         YAML Templates              #
#######################################
variables:
  - &run-build
    # runs a build operations. The task name in evergreen should
    # correspond to a make target for the build operation.
    name: test
    must_have_test_results: true
    commands:
      - func: run-make
        vars: { target: "${task_name}" }

#######################################
#              Functions              #
#######################################
functions:
  get-project-and-modules:
    - command: git.get_project
      type: system
      params:
        directory: anser
    - command: subprocess.exec
      type: setup
      params:
        working_dir: anser
        binary: make
        args: ["mod-tidy"]
        include_expansions_in_env: ["GOROOT"]
  parse-results:
    command: gotest.parse_files
    type: setup
    params:
      files:
        - "anser/build/output.*"
  run-make:
    command: subprocess.exec
    type: test
    params:
      working_dir: anser
      binary: make
      args: ["${make_args|}", "${target}"]
      include_expansions_in_env: ["GOROOT", "RACE_DETECTOR"]
  set-up-mongodb:
    - command: subprocess.exec
      type: setup
      params:
        env:
          MONGODB_URL: ${MONGODB_URL}
          MONGODB_DECOMPRESS: ${MONGODB_DECOMPRESS|*decompress}
        working_dir: anser
        command: make get-mongodb
    - command: subprocess.exec
      type: setup
      params:
        command: make get-mongosh
        env:
          MONGOSH_URL: ${MONGOSH_URL}
          MONGOSH_DECOMPRESS: ${MONGOSH_DECOMPRESS|*decompress}
        working_dir: anser
    - command: subprocess.exec
      type: setup
      params:
        background: true
        working_dir: anser
        command: make start-mongod
    - command: subprocess.exec
      type: setup
      params:
        working_dir: anser
        command: make check-mongod
    - command: subprocess.exec
      type: setup
      params:
        working_dir: anser
        command: make init-rs

#######################################
#                Tasks                #
#######################################

tasks:
  - <<: *run-build
    tags: ["test"]
    name: test-anser
  - <<: *run-build
    tags: ["test"]
    name: test-bsonutil
  - <<: *run-build
    tags: ["test"]
    name: test-db
  - <<: *run-build
    tags: ["test"]
    name: test-apm
  - <<: *run-build
    tags: ["test"]
    name: test-mock
  - <<: *run-build
    tags: ["test"]
    name: test-model

  - <<: *run-build
    tags: ["lint"]
    name: lint-anser
  - <<: *run-build
    tags: ["lint"]
    name: lint-apm
  - <<: *run-build
    tags: ["lint"]
    name: lint-bsonutil
  - <<: *run-build
    tags: ["lint"]
    name: lint-client
  - <<: *run-build
    tags: ["lint"]
    name: lint-db
  - <<: *run-build
    tags: ["lint"]
    name: lint-mock
  - <<: *run-build
    tags: ["lint"]
    name: lint-model

  - name: verify-mod-tidy
    commands:
      - command: git.get_project
        type: system
        params:
          directory: anser
      - func: run-make
        vars: { target: "${task_name}" }

task_groups:
  - name: lintGroup
    tasks: [".lint"]
    max_hosts: 2
    setup_group_can_fail_task: true
    setup_group:
      - func: get-project-and-modules
    setup_task:
      - func: run-make
        vars: { target: "clean-results" }
    teardown_task:
      - func: parse-results
  - name: testGroup
    tasks: [".test"]
    max_hosts: 2
    setup_group_can_fail_task: true
    share_processes: true
    setup_group:
      - func: get-project-and-modules
      - func: set-up-mongodb
    setup_task:
      - func: run-make
        vars: { target: "clean-results" }
    teardown_task:
      - func: parse-results

#######################################
#           Buildvariants             #
#######################################
buildvariants:
  - name: lint
    display_name: Lint
    expansions:
      GOROOT: /opt/golang/go1.24
    run_on:
      - ubuntu2204-small
    tasks:
      - lintGroup
      - verify-mod-tidy

  - name: ubuntu
    display_name: Ubuntu 22.04
    expansions:
      GOROOT: /opt/golang/go1.24
      RACE_DETECTOR: true
      MONGODB_URL: https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-ubuntu2204-6.0.6.tgz
      MONGOSH_URL: https://downloads.mongodb.com/compass/mongosh-1.9.0-linux-x64.tgz
    run_on:
      - ubuntu2204-small
    tasks: ["testGroup"]

  - name: macos
    display_name: macOS
    expansions:
      GOROOT: /opt/golang/go1.24
      MONGODB_URL: https://fastdl.mongodb.org/osx/mongodb-macos-arm64-6.0.6.tgz
      MONGOSH_URL: https://downloads.mongodb.com/compass/mongosh-1.9.0-darwin-arm64.zip
      MONGOSH_DECOMPRESS: unzip
    run_on:
      - macos-1100-arm64
    tasks: ["testGroup"]
